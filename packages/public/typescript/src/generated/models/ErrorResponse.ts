/* tslint:disable */
/* eslint-disable */
/**
 * Deplio
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024-02-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DeplioError } from './DeplioError';
import {
    DeplioErrorFromJSON,
    DeplioErrorFromJSONTyped,
    DeplioErrorToJSON,
} from './DeplioError';
import type { DeplioWarning } from './DeplioWarning';
import {
    DeplioWarningFromJSON,
    DeplioWarningFromJSONTyped,
    DeplioWarningToJSON,
} from './DeplioWarning';

/**
 * 
 * @export
 * @interface ErrorResponse
 */
export interface ErrorResponse {
    /**
     * 
     * @type {Array<DeplioWarning>}
     * @memberof ErrorResponse
     */
    warnings: Array<DeplioWarning>;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponse
     */
    message: string;
    /**
     * 
     * @type {Array<DeplioError>}
     * @memberof ErrorResponse
     */
    errors: Array<DeplioError>;
}

/**
 * Check if a given object implements the ErrorResponse interface.
 */
export function instanceOfErrorResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "warnings" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "errors" in value;

    return isInstance;
}

export function ErrorResponseFromJSON(json: any): ErrorResponse {
    return ErrorResponseFromJSONTyped(json, false);
}

export function ErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'warnings': ((json['warnings'] as Array<any>).map(DeplioWarningFromJSON)),
        'message': json['message'],
        'errors': ((json['errors'] as Array<any>).map(DeplioErrorFromJSON)),
    };
}

export function ErrorResponseToJSON(value?: ErrorResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'warnings': ((value.warnings as Array<any>).map(DeplioWarningToJSON)),
        'message': value.message,
        'errors': ((value.errors as Array<any>).map(DeplioErrorToJSON)),
    };
}

